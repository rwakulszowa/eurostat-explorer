---
permalink: scripts/dataset-plot.js
---

import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";
import { groupByDimensions, indexToLabel } from "./eurostat-parser.js";

class DatasetPlot extends HTMLElement {
  connectedCallback() {
    this.innerHTML = `
      <div id="plot"></div>
    `;
    this.render();
  }

  get datasetId() {
    const ret = this.getAttribute("dataset");
    if (!ret) {
      throw new Error("Attribute `dataset` is required.");
    }
    return ret;
  }

  async render() {
    const resp = await fetch(`./${this.datasetId}.json`);
    const { measurements } = await resp.json();

    // Map a category index to a human readable label.
    // Ordered by dimension.
    const categoryIndexToLabelPerDimension = measurements.id.map((dimId) =>
      indexToLabel(measurements.dimension[dimId])
    );

    const timeDimensionIndex = measurements.id.indexOf("time");

    const data = groupByDimensions(measurements).flatMap(({ key, values }) =>
      values.map((v, i) => ({
        key: key.toString(),
        // Convert to a Date object representing the beginning of the year.
        time: new Date(
          categoryIndexToLabelPerDimension[timeDimensionIndex](i),
          0
        ),
        value: measurements.value[v],
      }))
    );

    const plot = Plot.plot({
      // color: {legend: true},
      marks: [
        Plot.ruleY([0]),
        Plot.lineY(data, {
          x: "time",
          y: "value",
          stroke: "key",
        }),
      ],
    });

    // Add the plot to DOM.
    const div = document.querySelector("#plot");
    div.append(plot);
  }
}

customElements.define("dataset-plot", DatasetPlot);
